{"version":3,"sources":["pages/App.js","pages/Contato.js","pages/Equipe.js","pages/Exercicios.js","pages/Sobre.js","pages/Login.js","pages/Cadastro.js","serviceWorker.js","components/Header.js","components/Footer.js","index.js"],"names":["App","Contato","Equipe","Exercicios","Sobre","Form","styled","form","Label","label","Login","for","type","placeholder","value","Boolean","window","location","hostname","match","Title","h1","MenuItem","li","Menu","ul","NavBar","div","Footer","title","to","SocialMenu","MainFooter","footer","src","crossorigin","ReactDOM","render","path","exact","component","Cadastro","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iOAiCeA,MA/Bf,WAsBE,OACE,oCACE,8BACE,uCCjBOC,MARf,WACE,OACE,oCACE,yCCKSC,MARf,WACE,OACE,oCACE,wCCKSC,MARf,WACE,OACE,oCACE,4CCKSC,MARf,WACE,OACE,oCACE,uC,mXCFN,IAAMC,EAAOC,IAAOC,KAAV,KAYJC,EAAQF,IAAOG,MAAV,KAsBIC,MAlBf,WACE,OACE,oCACE,kBAACL,EAAD,KACE,kBAACG,EAAD,CAAOG,IAAI,YAAX,oBACA,6BACA,2BAAOC,KAAK,OAAOC,YAAY,uBAC/B,6BACA,kBAACL,EAAD,CAAOG,IAAI,YAAX,UACA,6BACA,2BAAOC,KAAK,OAAOC,YAAY,qBAC/B,6BACA,2BAAOD,KAAK,SAASE,MAAM,aCrBpBJ,MARf,WACE,OACE,oCACE,0CCOcK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,olBCdN,IAAMC,EAAQd,IAAOe,GAAV,KAMLC,EAAWhB,IAAOiB,GAAV,KASRC,EAAOlB,IAAOmB,GAAV,KAIJC,EAASpB,IAAOqB,IAAV,KAOG,SAASC,EAAT,GAA4B,IAAVC,EAAS,EAATA,MAC/B,OACE,gCACE,kBAACH,EAAD,KACE,kBAACN,EAAD,KAAQS,GACR,kBAACL,EAAD,KACE,kBAACF,EAAD,KACE,kBAAC,IAAD,CAAMQ,GAAG,UAAT,aAEF,kBAACR,EAAD,KACE,kBAAC,IAAD,CAAMQ,GAAG,aAAT,a,w1BCnCZ,IAAMR,EAAWhB,IAAOiB,GAAV,KASRC,EAAOlB,IAAOmB,GAAV,KAIJC,EAASpB,IAAOqB,IAAV,KAONI,EAAazB,IAAOqB,IAAV,KASVK,EAAa1B,IAAO2B,OAAV,KAUD,SAASL,IACtB,OACE,kBAACI,EAAD,KACE,4BACEE,IAAI,4CACJC,YAAY,cAGd,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAML,GAAG,UAAT,UAEF,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAMA,GAAG,eAAT,eAEF,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAEF,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,YAEF,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAMA,GAAG,WAAT,WAEF,kBAACC,EAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,UCxDZK,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAQR,MAAM,UACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOS,KAAK,IAAIC,OAAO,EAAMC,UAAWxC,IACxC,kBAAC,IAAD,CAAOsC,KAAK,SAASE,UAAWxC,IAChC,kBAAC,IAAD,CAAOsC,KAAK,SAASE,UAAWpC,IAChC,kBAAC,IAAD,CAAOkC,KAAK,cAAcE,UAAWrC,IACrC,kBAAC,IAAD,CAAOmC,KAAK,UAAUE,UAAWtC,IACjC,kBAAC,IAAD,CAAOoC,KAAK,WAAWE,UAAWvC,IAClC,kBAAC,IAAD,CAAOqC,KAAK,YAAYE,UAAWC,IACnC,kBAAC,IAAD,CAAOH,KAAK,SAASE,UAAW9B,KAElC,kBAAC,EAAD,OAEFgC,SAASC,eAAe,SHqGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.615738f2.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nfunction App() {\n  // const [projects, setProjects] = useState([]);\n\n  // useEffect(() => {\n  //   api.get(\"/projects\").then(response => {\n  //     setProjects(response.data);\n  //   });\n  // }, []);\n\n  // async function handleAddProject() {\n  //   setProjects([...projects, `Novo projeto ${Date.now()}`]);\n\n  //   const response = await api.post(\"/projects\", {\n  //     title: \"Novo Projeto\",\n  //     owner: \"Arthur Carneiro\"\n  //   });\n\n  //   const project = response.data;\n\n  //   setProjects([...projects, project]);\n  // }\n\n  return (\n    <>\n      <body>\n        <p>Teste</p>\n      </body>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\n\r\nfunction Contato() {\r\n  return (\r\n    <>\r\n      <h1>Contato</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Contato;\r\n","import React from \"react\";\r\n\r\nfunction Equipe() {\r\n  return (\r\n    <>\r\n      <h1>Equipe</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Equipe;\r\n","import React from \"react\";\r\n\r\nfunction Exercicios() {\r\n  return (\r\n    <>\r\n      <h1>Exercicios</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Exercicios;\r\n","import React from \"react\";\r\n\r\nfunction Sobre() {\r\n  return (\r\n    <>\r\n      <h1>Sobre</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sobre;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Form = styled.form`\r\n  text-align: center;\r\n  justify-content: center;\r\n  width: 300px;\r\n  height: 300px;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  border: solid 1px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 20px;\r\n`;\r\n\r\nfunction Login() {\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Label for=\"username\">Nome de Usuario:</Label>\r\n        <br />\r\n        <input type=\"text\" placeholder=\"Digite seu usuario\" />\r\n        <br />\r\n        <Label for=\"password\">Senha:</Label>\r\n        <br />\r\n        <input type=\"text\" placeholder=\"Digite sua senha\" />\r\n        <br />\r\n        <input type=\"submit\" value=\"Login\" />\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nfunction Login() {\r\n  return (\r\n    <>\r\n      <h1>Cadastro</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Title = styled.h1`\r\n  font-size: 1.5em;\r\n  margin-top: 10px;\r\n  color: #d3d0cb;\r\n`;\r\n\r\nconst MenuItem = styled.li`\r\n  display: inline;\r\n  font-size: 20px;\r\n  margin-left: 10px;\r\n  text-decoration: none;\r\n  float: right;\r\n  margin-right: 50px;\r\n`;\r\n\r\nconst Menu = styled.ul`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst NavBar = styled.div`\r\n  background-color: #2e5266;\r\n  padding: 20px;\r\n  width: auto;\r\n  height: auto;\r\n`;\r\n\r\nexport default function Footer({ title }) {\r\n  return (\r\n    <header>\r\n      <NavBar>\r\n        <Title>{title}</Title>\r\n        <Menu>\r\n          <MenuItem>\r\n            <Link to=\"/login\">CADASTRO</Link>\r\n          </MenuItem>\r\n          <MenuItem>\r\n            <Link to=\"/cadastro\">LOGIN</Link>\r\n          </MenuItem>\r\n        </Menu>\r\n      </NavBar>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaFacebook, FaGoogle } from \"react-icons/fa\";\r\n\r\nconst MenuItem = styled.li`\r\n  display: inline;\r\n  font-size: 20px;\r\n  margin-left: 10px;\r\n  text-decoration: none;\r\n  float: left;\r\n  margin-right: 50px;\r\n`;\r\n\r\nconst Menu = styled.ul`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst NavBar = styled.div`\r\n  background-color: #2e5266;\r\n  padding: 20px;\r\n  width: auto;\r\n  height: auto;\r\n`;\r\n\r\nconst SocialMenu = styled.div`\r\n  font-size: 25px;\r\n  width: auto;\r\n  float: right;\r\n  display: grid;\r\n  grid-auto-flow: column\r\n  grid-column-gap: 20px;\r\n`;\r\n\r\nconst MainFooter = styled.footer`\r\n  background-color: #2e5266;\r\n  padding-top: 3em;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 100px;\r\n  position: absolute;\r\n  left: 0;\r\n`;\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <MainFooter>\r\n      <script\r\n        src=\"https://kit.fontawesome.com/5a41c871a8.js\"\r\n        crossorigin=\"anonymous\"\r\n      ></script>\r\n\r\n      <NavBar>\r\n        <Menu>\r\n          <MenuItem>\r\n            <Link to=\"/aulas\">AULAS</Link>\r\n          </MenuItem>\r\n          <MenuItem>\r\n            <Link to=\"/exercicios\">EXERCICIOS</Link>\r\n          </MenuItem>\r\n          <MenuItem>\r\n            <Link to=\"/sobre\">SOBRE</Link>\r\n          </MenuItem>\r\n          <MenuItem>\r\n            <Link to=\"/contato\">CONTATO</Link>\r\n          </MenuItem>\r\n          <MenuItem>\r\n            <Link to=\"/equipe\">EQUIPE</Link>\r\n          </MenuItem>\r\n          <SocialMenu>\r\n            <FaFacebook />\r\n            <FaGoogle />\r\n          </SocialMenu>\r\n        </Menu>\r\n      </NavBar>\r\n    </MainFooter>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./pages/App\";\nimport Contato from \"./pages/Contato\";\nimport Equipe from \"./pages/Equipe\";\nimport Exercicios from \"./pages/Exercicios\";\nimport Sobre from \"./pages/Sobre\";\nimport Login from \"./pages/Login\";\nimport Cadastro from \"./pages/Cadastro\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Header title=\"4code\" />\n    <Switch>\n      <Route path=\"/\" exact={true} component={App} />\n      <Route path=\"/aulas\" component={App} />\n      <Route path=\"/sobre\" component={Sobre} />\n      <Route path=\"/exercicios\" component={Exercicios} />\n      <Route path=\"/equipe\" component={Equipe} />\n      <Route path=\"/contato\" component={Contato} />\n      <Route path=\"/cadastro\" component={Cadastro} />\n      <Route path=\"/login\" component={Login} />\n    </Switch>\n    <Footer />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}